{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\my-app\\\\components\\\\CardScreen.tsx\",\n  _this = this;\nimport React, { useState, useEffect } from \"react\";\nimport { Box, HStack, VStack, FlatList } from \"@gluestack-ui/themed\";\nimport { Avatar, Heading, Text } from \"@gluestack-ui/themed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CardScreen = function CardScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var getJsonPlaceholder = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var response = yield fetch('https://jsonplaceholder.typicode.com/posts/');\n      var json = yield response.json();\n      setData(json);\n      console.log(data);\n    });\n    return function getJsonPlaceholder() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getJsonPlaceholder();\n  }, []);\n  return _jsxDEV(Box, {\n    children: [_jsxDEV(Heading, {\n      fontSize: \"xl\",\n      p: \"4\",\n      pb: \"3\",\n      children: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, _this), _jsxDEV(FlatList, {\n      data: data,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxDEV(Box, {\n          borderBottomWidth: \"1\",\n          _dark: {\n            borderColor: \"muted.50\"\n          },\n          borderColor: \"muted.800\",\n          pl: [\"0\", \"4\"],\n          pr: [\"0\", \"5\"],\n          py: \"2\",\n          children: _jsxDEV(HStack, {\n            space: [2, 3],\n            justifyContent: \"space-between\",\n            children: [_jsxDEV(Avatar, {\n              size: \"48px\",\n              source: {\n                uri: item.id\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, _this), _jsxDEV(VStack, {\n              children: [_jsxDEV(Text, {\n                _dark: {\n                  color: \"warmGray.50\"\n                },\n                color: \"coolGray.800\",\n                bold: true,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 25\n              }, _this), _jsxDEV(Text, {\n                color: \"coolGray.600\",\n                _dark: {\n                  color: \"warmGray.200\"\n                },\n                children: item.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, _this), _jsxDEV(Spacer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, _this), _jsxDEV(Text, {\n              fontSize: \"xs\",\n              _dark: {\n                color: \"warmGray.50\"\n              },\n              color: \"coolGray.800\",\n              alignSelf: \"flex-start\",\n              children: item.userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, _this);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, _this);\n};\nexport default CardScreen;","map":{"version":3,"names":["React","useState","useEffect","Box","HStack","VStack","FlatList","Avatar","Heading","Text","jsxDEV","_jsxDEV","CardScreen","_useState","_useState2","_slicedToArray","data","setData","getJsonPlaceholder","_ref","_asyncToGenerator","response","fetch","json","console","log","apply","arguments","children","fontSize","p","pb","fileName","_jsxFileName","lineNumber","columnNumber","_this","renderItem","_ref2","item","borderBottomWidth","_dark","borderColor","pl","pr","py","space","justifyContent","size","source","uri","id","color","bold","title","body","Spacer","alignSelf","userId","keyExtractor"],"sources":["C:/xampp/htdocs/my-app/components/CardScreen.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Box, HStack, VStack, FlatList} from \"@gluestack-ui/themed\";\r\nimport {Avatar, AvatarImage, Heading, Text} from \"@gluestack-ui/themed\";\r\n\r\ntype JsonPlaceholder = {\r\n    id: string;\r\n    title: string;\r\n    body: string;\r\n    userId: string;\r\n};\r\n\r\nconst CardScreen = () => {\r\n    const [data, setData] = useState<JsonPlaceholder[]>([]);\r\n\r\n    const getJsonPlaceholder = async () => {\r\n        const response = await\r\n        fetch('https://jsonplaceholder.typicode.com/posts/')\r\n        const json = await response.json()\r\n        setData(json);\r\n        console.log(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getJsonPlaceholder();\r\n    }, []);\r\n\r\n    return <Box>\r\n        <Heading fontSize=\"xl\" p=\"4\" pb=\"3\">\r\n            Inbox\r\n        </Heading>\r\n        <FlatList \r\n            data={data} \r\n            renderItem={({ item }) => \r\n            <Box borderBottomWidth=\"1\" _dark={{\r\n            borderColor: \"muted.50\"\r\n        }} borderColor=\"muted.800\" pl={[\"0\", \"4\"]} pr={[\"0\", \"5\"]} py=\"2\">\r\n                <HStack space={[2, 3]} justifyContent=\"space-between\">\r\n                    <Avatar size=\"48px\" source={{\r\n                        uri: item.id\r\n                    }} />\r\n                    <VStack>\r\n                        <Text _dark={{\r\n                            color: \"warmGray.50\"\r\n                        }} color=\"coolGray.800\" bold>\r\n                            {item.title}\r\n                        </Text>\r\n                        <Text color=\"coolGray.600\" _dark={{\r\n                            color: \"warmGray.200\"\r\n                        }}>\r\n                            {item.body}\r\n                        </Text>\r\n                    </VStack>\r\n                    <Spacer />\r\n                    <Text fontSize=\"xs\" _dark={{\r\n                        color: \"warmGray.50\"\r\n                    }} color=\"coolGray.800\" alignSelf=\"flex-start\">\r\n                        {item.userId}\r\n                    </Text>\r\n                </HStack>\r\n            </Box>} keyExtractor={item => item.id} />\r\n    </Box>;\r\n}\r\n\r\nexport default CardScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}